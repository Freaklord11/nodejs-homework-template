"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1241],{101241:function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"LintLevel",{enumerable:!0,get:function(){return a.LintLevel}}),Object.defineProperty(t,"LintVerdict",{enumerable:!0,get:function(){return a.LintVerdict}}),t.isValidLintResult=S,t.getValidLintResults=function(e){return e.filter(S)},t.isResponseLintingRuleForReviewLevel=function(e,t,i){if(i){if(!1===e.enableBenchmarks)return!1;if(e.enableAttempt)return!0;for(const t of i)switch(t){case n.WorkerReviewLevel.Normal:return!!e.enableL0;case n.WorkerReviewLevel.Level1:return!!e.enableL1;case n.WorkerReviewLevel.ReviewConsensus:return!!e.enableL4;case n.WorkerReviewLevel.Corp:return!!e.enableL10;case n.WorkerReviewLevel.QIRAuditor:return!!e.enableQIRAuditor;case n.WorkerReviewLevel.QIRLeadAuditor:return!!e.enableQIRLeadAuditor}return!1}switch(t){case n.ReviewLevel.Attempt:return!!e.enableAttempt;case n.ReviewLevel.Normal:return!!e.enableL0;case n.ReviewLevel.Level1:return!!e.enableL1;case n.ReviewLevel.ReviewConsensus:return!!e.enableL4;case n.ReviewLevel.Expedite:return!!e.enableL8;case n.ReviewLevel.Corp:return!!e.enableL10;case n.ReviewLevel.CorpFlagged:return!!e.enableL11;case n.ReviewLevel.Deliverable:return!!e.enableL12;case n.ReviewLevel.QIRAuditor:return!!e.enableQIRAuditor;case n.ReviewLevel.QIRLeadAuditor:return!!e.enableQIRLeadAuditor}return!1},t.isLidarCuboidShiftMetadata=t.LidarCuboidShiftMode=t.AcceptedSphereLanguage=t.TextInAttachmentCustom=t.TextInAttachmentMode=t.emptyTaskLinterAllowedTaskTypes=t.timeSpentLinterAllowedTaskTypes=t.enterpriseDefaultScriptLinterNames=t.KeypointsDistanceOrientation=t.ZIndexLinterOperator=t.RegexMatches=t.ValidJsonLintModes=t.ComparisonOperator=t.LogicalOperator=t.ContainmentDependentOn=t.MetadataUnitConversionType=t.NerRelationshipsOverlapType=t.HypothesisChangedLintMode=t.DEFAULT_VALIDATOR=t.AVAILABLE_VALIDATORS=t.ValidatorCategory=t.PromptValidatorType=t.ValidatorType=t.ScriptLinterName=t.DataQualityLinterEnum=t.LintOutcome=t.MlFastLinters=t.TAXONOMY_LINTER_PREFIX=t.UseCases=t.DisabledDefaultLinterReason=t.LintOrigin=t.LintStage=t.PASSING_VERDICTS=void 0;var n=i(599789),a=i(167469);const r=[a.LintVerdict.Pass,a.LintVerdict.NoLint];var o,l,s,c;t.PASSING_VERDICTS=r,t.LintStage=o,function(e){e.Frontend="frontend",e.Backend="backend",e.Any="any"}(o||(t.LintStage=o={})),t.LintOrigin=l,function(e){e.Customer="customer",e.Corp="corp",e.Taxonomy="taxonomy",e.Auto="auto"}(l||(t.LintOrigin=l={})),t.DisabledDefaultLinterReason=s,function(e){e.Testing="testing",e.InProgress="in_progress",e.NeedMoreInfo="need_more_info",e.UnexpectedBehavior="unexpected_behavior",e.Unnecessary="unnecessary"}(s||(t.DisabledDefaultLinterReason=s={})),t.UseCases=c,function(e){e.Informational="informational",e.Critical="critical",e.Other="other"}(c||(t.UseCases=c={}));var T,p,m,d,C,g,u;function S(e){return e.lintOutcome!==p.Ignore}t.TAXONOMY_LINTER_PREFIX="TAXONOMY_",t.MlFastLinters=T,function(e){e.Invoice="invoice"}(T||(t.MlFastLinters=T={})),t.LintOutcome=p,function(e){e.Pass="pass",e.Fail="fail",e.Ignore="ignore"}(p||(t.LintOutcome=p={})),t.DataQualityLinterEnum=m,function(e){e.GENERIC="generic",e.NO_POLYGON_WITH_LESS_THAN_THREE_POINTS="no_polygon_with_less_than_three_points",e.NO_DUPLICATE_POINTS="no_duplicate_points"}(m||(t.DataQualityLinterEnum=m={})),t.ScriptLinterName=d,function(e){e.Truncation="SCRIPT_truncation-linter",e.Semseg="SCRIPT_semseg-linter",e.PointContainment="SCRIPT_point-containment-linter",e.FedMissingGmvImage="SCRIPT_fed-missing-gmv-image-linter",e.GenericDataCollectionVideoQuality="SCRIPT_generic-data-collection-video-quality",e.StaticGoldenTask="SCRIPT_static-golden-task-linter",e.PolygonContainment="SCRIPT_polygon-containment-linter",e.MinMaxSize="SCRIPT_size-linter",e.Ratio="SCRIPT_ratio-linter",e.StrayPixel="SCRIPT_stray-pixel-linter",e.BoxContainment="SCRIPT_box-containment-linter",e.OverlappingObjectFrame="SCRIPT_overlapping-object-frame",e.TrackAttributeConsistency="SCRIPT_track-attribute-consistency",e.ContiguousFrameTrack="SCRIPT_contiguous-frame-track",e.PolygonEdges="SCRIPT_edge-polygon-linter",e.Attribute="SCRIPT_attribute-linter",e.GISDuplicates="SCRIPT_gis-duplicates-linter",e.GisLaneLine="SCRIPT_gis-lane-line-linter",e.GisGoat="SCRIPT_gis-goat-linter",e.GisGoatPhaseTwo="SCRIPT_gis-goat-phase-two-linter",e.GisMongoose="SCRIPT_gis-mongoose-linter",e.GisMammoth="SCRIPT_gis-mammoth-linter",e.GisMammothHosted="SCRIPT_gis-mammoth-hosted-linter",e.GisPolygonOverlap="SCRIPT_gis-polygon-overlap-linter",e.GisMustBeLinked="SCRIPT_gis-must-be-linked",e.GisCheckSegmenter="SCRIPT_gis-check-segmenter-linter",e.GisCheckDRZEdgesNum="SCRIPT_gis-check-drz-edges-num-linter",e.GisCheckDeriveRules="SCRIPT_gis-check-derive-rules-linter",e.GisWoven="SCRIPT_gis-woven-linter",e.GisUpdateApiCheckFocuses="SCRIPT_gis-update-api-check-focuses-linter",e.GisUpdateApiCheckUpdateReasons="SCRIPT_gis-update-api-check-update-reasons-linter",e.GisUpdateApiTouchFocusAnnotation="SCRIPT_gis-update-api-touch-focus-annotation-linter",e.Comparison="SCRIPT_comparison-linter",e.LinkingQuality="SCRIPT_linking-quality-linter",e.DocumentMissingText="SCRIPT_document-missing-text",e.TextAttribute="SCRIPT_text-attribute",e.LSSFlood="SCRIPT_LSS_flood-linter",e.LSSContainsLabels="SCRIPT_LSS_contains-labels",e.LSSFloatingGround="SCRIPT_LSS_floating-ground",e.PrelabelDiff="SCRIPT_prelabel-diff-linter",e.SemsegLabelProximity="SCRIPT_semseg-label-proximity",e.LinkedPolygonContainmentLinter="SCRIPT_linked-polygon-containment-linter",e.VertexCount="Script_vertex-count-linter",e.MissingResponse="SCRIPT_missing-response-linter",e.OverlappingVertices="SCRIPT-overlapping-vertices-linter",e.PolygonStraightLine="SCRIPT-polygon-straight-line",e.SelfIntersectingPolygon="SCRIPT-self-intersecting-polygons-linter",e.SelfIntersectingPolygonLambda="SCRIPT_self-intersecting-polygons-linter-v2",e.DuplicateLambda="SCRIPT_polygon-duplicate-linter-v2",e.SharedSegmentLambda="SCRIPT_polygon-shared-segment-linter",e.PolygonOverlap="SCRIPT-polygon-overlap-linter",e.TimesUsed="SCRIPT_times-used-linter",e.S2Geometry="SCRIPT-s2-geometry-linter",e.IouOverlap="SCRIPT_box-overlap-linter",e.CuboidPolygonProximity="SCRIPT_cuboid-polygon-proximity-linter",e.AsyncCustomerEndpoint="SCRIPT_async-customer-endpoint-linter",e.CustomerEndpoint="SCRIPT_customer-endpoint-linter",e.BeeGISCustomerEndpoint="SCRIPT_bee-gis-customer-endpoint-linter",e.PolygonExtremalPoints="SCRIPT_polygon-extremal-points",e.PolygonPolygonContainment="SCRIPT_polygon-polygon-containment",e.ZenuityResponse="SCRIPT_zenuity-response",e.DeletedBaseAnnotation="SCRIPT_deleted-base-annotation",e.CatalogLinter="SCRIPT_catalog-linter",e.FbAudioTranscription="SCRIPT_fb-audio-transcription-linter",e.ForbiddenCategorization="SCRIPT_forbidden-categorization",e.SemsegDisjointedInstance="SCRIPT_semseg-disjointed-instance-linter",e.LinePolygonContainment="SCRIPT_line-polygon-containment-linter",e.SemsegLabelMinMax="SCRIPT_semseg-label-min-max",e.CameraConsistency="SCRIPT_camera-consistency",e.LinkedInstersection="SCRIPT_linked-intersection-linter",e.LinkedAttribute="SCRIPT_linked-attribute-linter",e.LineEndpoint="SCRIPT_line-endpoint-linter",e.LineMergePoint="SCRIPT_line-endpoint-merge-linter",e.LineBetweenLines="SCRIPT_line-between-lines-linter",e.LineBetweenLinked="SCRIPT_line-between-linked-linter",e.SameLabelLinking="SCRIPT_same-label-linking-linter",e.OverlappingLinesSameLabel="SCRIPT_overlapping-lines-same-label-linter",e.AdobeImageEditingRequest="SCRIPT_adobe-image-editing-request-linter",e.ShadowPredictions="SCRIPT_shadow-predictions",e.MLCarCamera="SCRIPT_ML_car-camera",e.MLBrakeCamera="SCRIPT_ML_brake-camera",e.MLCelery="SCRIPT_ML_celery",e.MLDocumentNats="SCRIPT_ML_document-nats",e.MLCuboidMismatch="SCRIPT_ML_cuboid-mismatch",e.MLQualitySingletonMetric="SCRIPT_ml-quality-singleton-metric",e.DocumentLinking="SCRIPT_document-linking-linter",e.DocumentMinMaxLinking="SCRIPT_document-min-max-linking-linter",e.DocumentTextCharacters="SCRIPT_text-characters",e.TextMultiSelect="SCRIPT_text-multi-select-linter",e.TextFieldContains="SCRIPT_text-field-contains-linter",e.FalconCatSubmissionCode="SCRIPT_falcon-cat-submission-code-linter",e.MetadataContainsChoice="SCRIPT_metadata-contains-choice-linter",e.MetadataUnitConversion="SCRIPT_metadata-unit-conversion-linter",e.FieldContainsField="SCRIPT_field-contains-field-linter",e.URLExists="SCRIPT_url-exists-linter",e.HypothesisMatchesChoice="SCRIPT_hypothesis-matches-choice-linter",e.NerValidSegments="SCRIPT_ner-valid-segments-linter",e.NerRelationships="SCRIPT_ner-relationships-linter",e.NerEntities="SCRIPT_ner-entities-linter",e.HypothesisChanged="SCRIPT_hypothesis-changed-linter",e.SmartAssistantResponse="SCRIPT_smart-assistant-response-linter",e.TimeSpent="SCRIPT_time-spent-linter",e.LycheeItemValuesInGroup="SCRIPT_lychee-item-values-in-group-linter",e.LycheeItemTableRow="SCRIPT_lychee-item-table-row-linter",e.LaneLineOrder="SCRIPT_lane-line-order-linter",e.LicensePlate="SCRIPT_license-plate-linter",e.SwappedBaseAnnotations="SCRIPT_swapped-base-annotations-linter",e.GISLinkingLambda="SCRIPT_gis-linking-lambda",e.GISStitchingLambda="SCRIPT_gis-stitching-lambda",e.GISLinkingML="SCRIPT_gis-ml-linter",e.SaguaroML="SCRIPT_saguaro-ml-linter",e.URLDomain="SCRIPT_url-domains-linter",e.VideoPlaybackFrameCount="SCRIPT_video-playback-frame-count-linter",e.VideoSameAttribute="SCRIPT_video-same-attribute-linter",e.EveryXFrame="SCRIPT_every-x-frame-linter",e.FlamingoCategory="SCRIPT_flamingo-category-linter",e.LabelCorrectSide="SCRIPT_label-correct-side-linter",e.VideoTranscriptionMatch="SCRIPT_video-transcription-match-linter",e.VideoTranscriptionFlowTracking="SCRIPT_video-transcription-flow-tracking-linter",e.NERRelationshipRequired="SCRIPT_ner-relationship-required-linter",e.NERDirectionalRelationship="SCRIPT_ner-directional-relationship-linter",e.NERSameLabelRelationship="SCRIPT_ner-same-label-relationship-linter",e.ValidJSONLinter="SCRIPT_valid-json-linter",e.ParentChildRotation="SCRIPT_parent-child-rotation-linter",e.TextDuplicateStringInArray="SCRIPT_text-duplicate-string-in-array-linter",e.FieldSetDuplicateCheck="SCRIPT_fieldset-duplicate-check-linter",e.GooseEnrichmentLinter="SCRIPT_goose-enrichment-linter",e.GooseDeduplicationLinter="SCRIPT_goose-deduplication-linter",e.GooseTaggingLinter="SCRIPT_goose-tagging-linter",e.InstacartAlcoholLinter="SCRIPT_instacart-alcohol-linter",e.InstacartNPCLinter="SCRIPT_instacart-npc-linter",e.FlamingoPriorityVariantLinter="SCRIPT_flamingo-priority-variant-linter",e.NEROverlap="SCRIPT_ner-overlap-linter",e.TextFieldLength="SCRIPT_text-field-length",e.TextFieldWordCount="SCRIPT_text-field-word-count",e.TextCollectionNumericLinter="SCRIPT_text-collection-numeric-linter",e.NeevaSxSDuplicateURl="SCRIPT_neeva-sxs-duplicate-url-linter",e.NeevaSxSScoreLinter="SCRIPT_neeva-sxs-score-linter",e.FlamingoBulletsBlockingLinter="SCRIPT_flamingo-bullets-blocking-linter",e.FlamingoBulletsDismissibleLinter="SCRIPT_flamingo-bullets-dismissable-linter",e.FlamingoBulletsRefinementDismissibleLinter="SCRIPT_flamingo-bullets-refinement-dismissible-linter",e.FlamingoBulletsModelLinter="SCRIPT_flamingo-bullets-model-linter",e.FlamingoBulletsAttributeLinter="SCRIPT_flamingo-bullets-attribute-linter",e.Overlapping="SCRIPT_overlapping-linter",e.TCMetadataFieldMatch="SCRIPT_tc-metadata-field-match-linter",e.TCCombination="SCRIPT_tc-combination-linter",e.TCFieldCombination="SCRIPT_tc-field-combination-linter",e.TCRegex="SCRIPT_tc-regex-linter",e.LinkedPointBox="SCRIPT_linked-point-box-linter",e.InstacartSSMissedCrawlAttachment="SCRIPT_instacart-ssmissed-crawl-attachment-linter",e.InstacartTaxonomyKeywordLinter="SCRIPT_instacart-taxonomy-keyword-linter",e.TCConditionalBlocker="SCRIPT_tc-conditional-blocker-linter",e.FlamingoBulletsFullStringLinter="SCRIPT_flamingo-bullets-full-string-linter",e.FlamingoBulletsMaterialsLinter="SCRIPT_flamingo-bullets-materials-linter",e.TCRepeatedWords="SCRIPT_tc-repeated-words-linter",e.EventLinter="SCRIPT_event-linter",e.ZIndexLinter="SCRIPT_z-index-linter",e.CovariantObjectDetection="SCRIPT_covariant-object-detection-linter",e.LinkedLines="SCRIPT_linked-lines-linter",e.LineShape="SCRIPT_line-shape-linter",e.TCBadWords="SCRIPT_tc-bad-words-linter",e.PointDistanceFromBox="SCRIPT_point-distance-from-box-linter",e.UnexpectedNonBaseAnnotation="SCRIPT_unexpected-non-base-annotation-linter",e.VertexPlacement="SCRIPT_vertex-placement-linter",e.Rapid2dMlLinter="SCRIPT_rapid-2d-ml-linter",e.OneTeamRoadLineCustomLinter="SCRIPT_one-team-road-line-custom-linter",e.LidarPoints="SCRIPT_lidar-points-linter",e.OneTeamOrRadarCustomLinter="SCRIPT_one-team-or-radar-custom-linter",e.AdeptGptLinter="SCRIPT_adept-gpt-linter",e.AdeptPipelineALinter="SCRIPT_adept-pipeline-a-linter",e.AdeptPipelineBLinter="SCRIPT_adept-pipeline-b-linter",e.AcyclicLinkingLinter="SCRIPT_acyclic-linking-linter",e.OneTeamRoadBoundaryCustomLinter="SCRIPT_one-team-road-boundary-custom-linter",e.LidarCuboidOverlap="SCRIPT_lidar-cuboid-overlap-linter",e.ParkingSlotCustomLinter="SCRIPT_parking-slot-custom-linter",e.TextFieldCorrectLanguage="SCRIPT_text-field-correct-language-linter",e.TextFieldPromptSpam="SCRIPT_text-field-prompt-spam-linter",e.ChatTaskMinEditDistance="SCRIPT_chat-task-min-edit-distance-linter",e.TextFieldUniqueResponse="SCRIPT_text-field-unique-response-linter",e.TextFieldSaplingGrammarLinter="SCRIPT_text-field-sapling-grammar-linter",e.TextFieldPromptResponsePairLinter="SCRIPT_text-field-prompt-response-pair-linter",e.TextFieldPromptResponsePairPlagiarismLinter="SCRIPT_text-field-prompt-response-pair-plagiarism-linter",e.TextFieldSemanticSimilarity="SCRIPT_text-field-semantic-similarity-linter",e.TCSameAnswer="SCRIPT_tc-same-answer-linter",e.IntersectingLinesLinter="SCRIPT_intersecting-lines-linter",e.PedestrianCrossingAndEnvironmentCustomLinter="SCRIPT_pedestrian-crossing-and-environment-custom-linter",e.LinkingPairsLinter="SCRIPT_linking-pairs-linter",e.TextCollectionCategoryFieldMatchLinter="SCRIPT-textcollection-category-field-match-linter",e.TextCollectionCategoryFieldChildrenLinter="SCRIPT-textcollection-category-field-children-linter",e.LinksDirectionLinter="SCRIPT_links-direction-linter",e.ToucanClassificationGBRCustomLinter="SCRIPT_toucan-classification-gbr-custom-linter",e.RankingFieldMissingResponse="SCRIPT_ranking-field-missing-response",e.BoxOverlapping="SCRIPT_box-overlapping-linter",e.BidirectionalLinks="SCRIPT_bidirectional-links-linter",e.EmptyTask="SCRIPT_empty-task-linter",e.TextFieldDiversity="SCRIPT_text-field-diversity-linter",e.ZebraLidarSubCustomLinter="SCRIPT_zebra-lidar-sub-custom-linter",e.MultipleLinkedLines="SCRIPT_multiple-linked-lines-linter",e.VisibleMask="SCRIPT_visible-mask-linter",e.AnnotationOnPadding="SCRIPT_annotation-on-padding-linter",e.AttributeTextFieldGrammarLinter="SCRIPT_attribute-text-field-grammar-linter",e.AttributeTextContainmentLinter="SCRIPT_attribute-text-containment-linter",e.HKPSizeBoxBasedImageCustomLinter="SCRIPT_size-box-based-image-custom-linter",e.RequireLinkingFramesLinter="SCRIPT_require-linking-frames-linter",e.LinksLabels="SCRIPT_links-labels-linter",e.RestrictFrames="SCRIPT_restrict-frames-linter",e.TextGibberishDetection="SCRIPT_text-gibberish-detection-linter",e.TextFieldOverlap="SCRIPT_text-field-overlap-linter",e.UShapeLinter="SCRIPT_u-shape-linter",e.EventLengthMinMaxLinter="SCRIPT_event-length-min-max-linter",e.EventOverlapLinter="SCRIPT_event-overlap-linter",e.TaskMetadata="SCRIPT_task-metadata-linter",e.PolygonTooClose="SCRIPT_polygon-too-close-linter",e.ParkingBarrierCustomLinter="SCRIPT_parking-barrier-custom-linter",e.TextFieldLLM="SCRIPT_text-field-llm",e.GoatAttributeLinter="SCRIPT_goat-attribute-linter",e.RankingAndRatingLinter="SCRIPT_ranking-and-rating-linter",e.NGramDiversityLinter="SCRIPT_ngram-diversity-linter",e.WoodpeckerEnrichmentLinter="SCRIPT_woodpecker-enrichment-linter",e.EveryXFramesAnteaterCustomLinter="SCRIPT_every-x-frames-anteater-custom-linter",e.LidarTopDownZIndex="SCRIPT_lidar-top-down-z-index-linter",e.GoatLTDCuboidLinter="SCRIPT_ltd-cuboid-linter",e.LidarKeyPoints="SCRIPT_lidar-key-points-linter",e.AdeptBrowserLinter="SCRIPT_adept-browser-linter",e.OnceOnVideoAnteaterCustomLinter="SCRIPT_once-on-video-anteater-custom-linter",e.TCBlockTextRegexLinter="SCRIPT_tc_block_text_regex_linter",e.RestrictMultiselectCustomLinter="SCRIPT_restrict-multiselect-custom-linter",e.AnteaterTLRCustomLinter="SCRIPT_anteater-tlr-custom-linter",e.TextCollectionNumericValidationLinter="SCRIPT_text-collection-numeric-validation-linter",e.ZOrderResponseLinter="SCRIPT_z-order-response-linter",e.EmptyArea="SCRIPT_empty-area-linter",e.EditCompletionLevenshteinLinter="SCRIPT_edit-completion-levenshtein-linter",e.LinesInWrongSideLinter="SCRIPT_lines-in-wrong-side-linter",e.MiniGoatCenterLinesLinter="SCRIPT_mini-goat-center-lines-linter",e.TextFieldCheatingLinter="SCRIPT_text-field-cheating-linter",e.FieldsInAttachmentsLinter="SCRIPT_fields-in-attachments-linter",e.GoatLTDLaneLinesLinter="SCRIPT_goat-ltd-lane-lines-linter",e.GPTZeroLinter="SCRIPT_gpt-zero-linter",e.GPTScaleLinter="SCRIPT_gpt-scale-linter",e.BulbaGeneralistLinter="SCRIPT_bulba-generalist-linter",e.AutoCritique="SCRIPT_auto-critique-linter",e.ArmadilloDuplicateFileNamesLinter="SCRIPT_armadillo-duplicate-file-names-linter",e.BulbasaurCustomLinter="SCRIPT_bulbasaur-custom-linter",e.AttemptReviewLinter="SCRIPT_attempt-review-linter",e.ValeoCustomLinter="SCRIPT_valeo-custom-linter",e.AnteaterAttachedToLinter="SCRIPT_anteater-attached-to-linter",e.LinkLinter="SCRIPT_link-linter",e.AnnotationPath="SCRIPT_annotation-path-linter",e.KeypointsDistance="SCRIPT_keypoints-distance-linter",e.AnteaterEventLinter="SCRIPT_anteater-event-linter",e.AnteaterLTDLinter="SCRIPT_anteater-ltd-linter",e.TextFieldSphereExecutionOutputLinter="SCRIPT_text-field-sphere-execution-output-linter",e.ChatSphereExecutionOutputLinter="SCRIPT_chat-sphere-execution-output-linter",e.LidarCuboidShift="SCRIPT_lidar-cuboid-shift-linter",e.BeeCustomLinter="SCRIPT_bee-custom-linter",e.DependentConditionsLinter="SCRIPT_dependent-conditions-linter",e.EventDurationLinter="SCRIPT_event-duration-linter",e.EventSequenceStartingValueLinter="SCRIPT_event-sequence-starting-value-linter",e.DelimiterAnnotationLinter="SCRIPT_delimiter-annotation-linter",e.OverlappingLines="SCRIPT_overlapping-lines-linter",e.AnteaterGridLinter="SCRIPT_anteater-grid-linter",e.GoatEgoIgnoreCustomLinter="SCRIPT_goat-ego-ignore-custom-linter",e.AnteaterOccludedPathLinter="SCRIPT_anteater-occluded-path-linter",e.AnteaterHorizontalStructuresLinter="SCRIPT_horizontal-structures-linter",e.AnteaterWeatherCatLinter="SCRIPT_anteater-weather-cat-linter",e.VenusLTDLinter="SCRIPT_venus-ltd-linter",e.AnteaterLSODLinter="SCRIPT_anteater-lsod-linter",e.GoatTLShapeLinter="SCRIPT_goat-tl-shape-linter",e.RabbitCustomLinter="SCRIPT_rabbit-custom-linter",e.ChatJsonataCustomLinter="SCRIPT_chat-jsonata-custom-linter",e.ChatPreventAnswerBasedOnContributorWt="SCRIPT_chat-prevent-answer-based-on-contributor-wt",e.ChatDolphinPromptImage="SCRIPT_chat-dolphin-prompt-image",e.NightingaleCheckCorrectnessClassification="SCRIPT_nightingale-check-correctness-classification",e.ChatJustificationMinWords="SCRIPT_chat-justification-min-words",e.NightingaleResponseCoherence="SCRIPT_nightingale-response-coherence",e.ChatPromptModelAgreementLinter="SCRIPT_chat-prompt-model-agreement-linter",e.BaseChatTaskPerStepLinter="SCRIPT_base-chat-task-per-step-linter",e.ChatMissingResponseLinter="SCRIPT_chat-task-missing-response-linter",e.ChatMLSingletonQualityMetricLinter="SCRIPT_chat-ml-singleton-quality-metric-linter",e.ChatMLPromptResponsePairQualityMetricLinter="SCRIPT_chat-ml-prompt-response-pair-quality-metric-linter",e.ChatRegexLinter="SCRIPT_chat-regex-linter",e.ChatGPTZeroLinter="SCRIPT_chat-gpt-zero-linter",e.ChatGPTScaleLinter="SCRIPT_chat-gpt-scale-linter",e.ChatMinEditDistanceLinter="SCRIPT_chat-min-edit-distance-linter",e.ChatUniqueResponseLinter="SCRIPT_chat-unique-response-linter",e.ChatPromptResponsePairLinter="SCRIPT_chat-prompt-response-pair-linter",e.ChatTextLengthLinter="SCRIPT_chat-text-length-linter",e.ChatSemanticSimilarityLinter="SCRIPT_chat-semantic-similarity-linter",e.ChatCorrectLanguageLinter="SCRIPT_chat-correct-language-linter",e.ChatNGramDiversityLinter="SCRIPT_chat-ngram-diversity-linter",e.ChatBadWordsLinter="SCRIPT_chat-bad-words-linter",e.ChatGoogleTranslateDetectionLinter="SCRIPT_chat-google-translate-detection-linter",e.ChatMultiTurnResponseSimilarityLinter="SCRIPT_chat-multi-turn-response-similarity-linter",e.ChatURLExistsLinter="SCRIPT_chat-url-exists-linter",e.ChatPromptResponseWordCountDiffLinter="SCRIPT_chat-prompt-response-word-count-diff-linter",e.ChatValidLikertScoreLinter="SCRIPT_chat-valid-likert-score-linter",e.ChatJustificationLikertMatchMLLinter="SCRIPT_chat-likert-justification-match-ml-linter",e.ChatNightingaleCustomizedLinter="SCRIPT_chat-nightingale-customized-linter",e.ChatNightingaleArchetypeDiversityLinter="SCRIPT_chat-nightingale-archetype-diversity-linter",e.ChatNightingaleGoalAlignmentLinter="SCRIPT_chat-nightingale-goal-alignment-linter",e.ChatNightingalePlagiarismLinter="SCRIPT_chat-nightingale-plagiarism-linter",e.ChatNightingaleReferenceLinter="SCRIPT_chat-nightingale-reference-linter",e.ChatNightingaleValidateArchetypeLinter="SCRIPT_chat-nightingale-validate-archetype-linter",e.ChatNightingaleWordCountLinter="SCRIPT_chat-nightingale-word-count-linter",e.ChatNightingaleRankingConsistencyLinter="SCRIPT_chat-nightingale-ranking-consistency-linter",e.ChatNightingaleRatingConsistencyLinter="SCRIPT_chat-nightingale-rating-consistency-linter",e.ChatPromptComparisonToSearchResult="SCRIPT_chat-prompt-comparison-to-search-result",e.ChatBulbaFactualityLinter="SCRIPT_chat-bulba-factuality-linter",e.ChatNERSentenceLinter="SCRIPT_chat-ner-sentence-linter",e.ChatBulbaLikertResponseValidator="SCRIPT_chat-bulba-likert-response-validator",e.ChatBulbaLockFieldLinter="SCRIPT_chat-bulba-lock-field-linter",e.ChatBulbaCodeEvalCodePresentLinter="SCRIPT_chat-bulba-code-eval-code-present-linter",e.ChatImageNSFWLinter="SCRIPT_chat-image-nsfw-linter",e.ChatMRSSphereExecutionRelevanceLinter="SCRIPT_chat-mrs-sphere-execution-relevance-linter",e.ChatGoogleSearchPlagiarismLinter="SCRIPT_chat-google-search-plagiarism-linter",e.ChatMultiModalRelevanceLinter="SCRIPT_chat-multi-modal-relevance-linter",e.ChatLatexParsingLinter="SCRIPT_chat-latex-parsing-linter",e.ChatBlockMMMULinter="SCRIPT_chat-block-mmmu-linter"}(d||(t.ScriptLinterName=d={})),t.ValidatorType=C,function(e){e.WordCount="VALIDATOR_word-count",e.Language="VALIDATOR_language",e.URL="VALIDATOR_correct-url",e.Regex="VALIDATOR_regex",e.BadWords="VALIDATOR_bad-words",e.Overlap="VALIDATOR_response-overlap",e.InstructionsSimilarity="VALIDATOR_instruction-similarity",e.Grammar="VALIDATOR_grammar",e.DisablePasting="VALIDATOR_disable-pasting",e.MissingResponse="VALIDATOR_missing-response",e.TextFormatting="VALIDATOR_text-formatting",e.Size="VALIDATOR_size",e.TimesUsed="VALIDATOR_times-used",e.ContiguousFrameTrack="VALIDATOR_contiguous-frame-track",e.StraightLine="VALIDATOR_straight-line",e.OverlappingVertices="VALIDATOR_overlapping-vertices",e.AnnotationOverlap="VALIDATOR_annotation-overlap",e.AnnotationContainment="VALIDATOR_annotation-containment",e.PixelPercentage="VALIDATOR_pixel-percentage",e.Diversity="VALIDATOR_diversity",e.UniqueResponse="VALIDATOR_unique-response",e.GPTZero="VALIDATOR_gptzero",e.GPTScale="VALIDATOR_gptscale",e.Cheating="VALIDATOR_cheating",e.NGramDiversity="VALIDATOR_ngram-diversity",e.MLQualitySingletonMetric="VALIDATOR_ml-quality-singleton-metric",e.SemanticSimilarity="VALIDATOR_semantic-similarity",e.PRPLinter="VALIDATOR_prp-linter",e.TextFieldSphereExecutionOutputLinter="VALIDATOR_text-field-sphere-execution-output-linter"}(C||(t.ValidatorType=C={})),t.PromptValidatorType=g,function(e){e.Profanity="profanity",e.LanguageAndGibberish="languageAndGibberish",e.WordCount="wordCount",e.ReferenceTextWordCount="referenceTextWordCount",e.StringBlocklist="stringBlocklist",e.RegexBlocklist="regexBlocklist",e.RepeatedWords="repeatedWords",e.TextFormatting="textFormatting",e.SpellingAndGrammar="spellingAndGrammar",e.DisablePasting="disablePasting",e.SemanticSimilarity="semanticSimilarity",e.NGramDiversity="nGramDiversity",e.MLQualitySingletonMetric="mLQualitySingletonMetric",e.PRPLinters="prpLinters",e.TextFieldSphereExecutionOutputLinter="textFieldSphereExecutionOutputLinter"}(g||(t.PromptValidatorType=g={})),t.ValidatorCategory=u,function(e){e.Spam="Spam",e.Constraints="Constraints",e.GrammarSpelling="Grammar & Spelling",e.Cheating="Cheating",e.Diversity="Diversity",e.GeneralQuality="General Quality",e.Other="Other",e.Multimodal="Multimodal"}(u||(t.ValidatorCategory=u={}));const R=[{validatorType:C.WordCount,linterName:d.TextFieldWordCount,validatorName:"Word Count",shortName:"word-count",taskTypes:[a.TaskType.TextCollection],category:u.Constraints,shortDescription:"Enforce a minimum or maximum text length."},{validatorType:C.Language,linterName:d.TextFieldCorrectLanguage,validatorName:"Language & Gibberish Detection",shortName:"language",taskTypes:[a.TaskType.TextCollection],category:u.Spam,shortDescription:'Requires the response to be in the specified language. Not very effective (overflags + misses some things) - we recommend instead using PRP with a custom prompt. Same as "Language-Correctness" linter in Chat Task.'},{validatorType:C.Regex,linterName:d.TCRegex,validatorName:"Regex Blocklist",shortName:"regex",taskTypes:[a.TaskType.TextCollection],category:u.Constraints,shortDescription:'Use regular expression rules to prevent the most common errors or enforce certain response formats. Same as "Regex" linter in Chat Task.'},{validatorType:C.BadWords,linterName:d.TCBadWords,validatorName:"String Blocklist",shortName:"string-blocklist",taskTypes:[a.TaskType.TextCollection],category:u.Constraints,shortDescription:"Prevents inappropriate words in response"},{validatorType:C.Overlap,linterName:d.TextFieldOverlap,validatorName:"Response Similarity",shortName:"response-similarity",taskTypes:[a.TaskType.TextCollection],category:u.Spam,shortDescription:"This validator prevents labelers from submitting prompts that overlap too much with reference text."},{validatorType:C.InstructionsSimilarity,linterName:d.TextFieldPromptSpam,validatorName:"Require Edits",shortName:"require-edits",taskTypes:[a.TaskType.TextCollection],category:u.Spam,shortDescription:"Enforce levenshtein edits from hypothesis filter."},{validatorType:C.URL,linterName:d.URLExists,validatorName:"URL Formatting",shortName:"correct-url",taskTypes:[a.TaskType.TextCollection],category:u.Constraints,shortDescription:"Checks if the URL provided is a working link"},{validatorType:C.TextFormatting,linterName:d.TCRegex,validatorName:"Text Formatting",shortName:"formatting",taskTypes:[a.TaskType.TextCollection],category:u.GrammarSpelling,shortDescription:"Requires sentence case capitalization, punctuation, and no trailing whitespaces."},{validatorType:C.DisablePasting,linterName:d.TCRegex,validatorName:"Disable Pasting",shortName:"TAXONOMY_disable-pasting",taskTypes:[a.TaskType.TextCollection],category:u.Cheating,shortDescription:"Prevents pasting in the response field."},{validatorType:C.Size,linterName:d.MinMaxSize,validatorName:"Size",shortName:"size",taskTypes:[a.TaskType.ImageAnnotation,a.TaskType.VideoPlaybackAnnotation,a.TaskType.SegmentAnnotation]},{validatorType:C.TimesUsed,linterName:d.TimesUsed,validatorName:"Label Usage",shortName:"label-usage",taskTypes:[a.TaskType.ImageAnnotation,a.TaskType.VideoPlaybackAnnotation]},{validatorType:C.ContiguousFrameTrack,linterName:d.ContiguousFrameTrack,validatorName:"Contiguous Objects",shortName:"contiguous-objects",taskTypes:[a.TaskType.VideoPlaybackAnnotation]},{validatorType:C.StraightLine,linterName:d.PolygonStraightLine,validatorName:"Collinear Points",shortName:"collinear-points",taskTypes:[a.TaskType.ImageAnnotation]},{validatorType:C.OverlappingVertices,linterName:d.OverlappingVertices,validatorName:"Duplicate Vertex",shortName:"duplicate-vertex",taskTypes:[a.TaskType.ImageAnnotation]},{validatorType:C.AnnotationOverlap,linterName:d.Overlapping,validatorName:"Overlap",shortName:"annotation-overlap",taskTypes:[a.TaskType.ImageAnnotation,a.TaskType.VideoPlaybackAnnotation]},{validatorType:C.AnnotationContainment,linterName:d.Overlapping,validatorName:"Containment",shortName:"annotation-containment",taskTypes:[a.TaskType.ImageAnnotation,a.TaskType.VideoPlaybackAnnotation]},{validatorType:C.PixelPercentage,linterName:d.SemsegLabelMinMax,validatorName:"Pixel Percentage",shortName:"pixel-percentage",taskTypes:[a.TaskType.SegmentAnnotation]},{validatorType:C.PixelPercentage,linterName:d.SemsegLabelMinMax,validatorName:"Pixel Percentage",shortName:"pixel-percentage",taskTypes:[a.TaskType.SegmentAnnotation]},{validatorType:C.Diversity,linterName:d.TextFieldDiversity,validatorName:"Regex Diversity",shortName:"diversity",taskTypes:[a.TaskType.TextCollection],category:u.Diversity,shortDescription:"Looks back at window of attempts for a tasker and checks the # of attempts that match the regex, and blocks them."},{validatorType:C.UniqueResponse,linterName:d.TextFieldUniqueResponse,validatorName:"Unique Response",shortName:"unique-response",taskTypes:[a.TaskType.TextCollection],category:u.Diversity,shortDescription:"Looks back at attempts done in the last 24 hours and prevents any within a certain Levenshtein distance."},{validatorType:C.GPTZero,linterName:d.GPTZeroLinter,validatorName:"GPT Zero",shortName:"gptzero",taskTypes:[a.TaskType.TextCollection],category:u.Cheating,shortDescription:"Checks if the field text exceeds a certain GPTZero threshold."},{validatorType:C.GPTScale,linterName:d.GPTScaleLinter,validatorName:"GPT Scale Linter",shortName:"gptscale",taskTypes:[a.TaskType.TextCollection],category:u.Cheating},{validatorType:C.Cheating,linterName:d.TextFieldCheatingLinter,validatorName:"Cheating",shortName:"cheating",taskTypes:[a.TaskType.TextCollection],category:u.Cheating,shortDescription:"Used to ban taskers suspected of cheating (e.g., copying/pasting from ChatGPT), or escalate tasks suspected of cheating."},{validatorType:C.NGramDiversity,linterName:d.NGramDiversityLinter,validatorName:"NGram Diversity",shortName:"ngram-diversity",taskTypes:[a.TaskType.TextCollection],category:u.Diversity,shortDescription:"Enforce diversity of word choice across tasks."},{validatorType:C.MLQualitySingletonMetric,linterName:d.MLQualitySingletonMetric,validatorName:"ML Quality Singleton Metric",shortName:"ml-quality-singleton-metric",taskTypes:[a.TaskType.TextCollection],category:u.Diversity},{validatorType:C.SemanticSimilarity,linterName:d.TextFieldSemanticSimilarity,validatorName:"Semantic Similarity",shortName:"semanticsimilarity",taskTypes:[a.TaskType.TextCollection],category:u.Diversity,shortDescription:"Blocks a prompt from being submitted if the cosine similarity to existing prompts submitted (across the entire project) is above the threshold."},{validatorType:C.PRPLinter,linterName:d.TextFieldPromptResponsePairLinter,validatorName:"PRP Linter",shortName:"prplinter",taskTypes:[a.TaskType.TextCollection],category:u.Diversity,shortDescription:"Run a GPT-4 prompt and lint based on output."},{validatorType:C.TextFieldSphereExecutionOutputLinter,linterName:d.TextFieldSphereExecutionOutputLinter,validatorName:"Text Field Sphere Execution Output Linter",shortName:"text-field-sphere-execution-output-linter",taskTypes:[a.TaskType.TextCollection],category:u.Constraints}];t.AVAILABLE_VALIDATORS=R;const P={[d.TextFieldWordCount]:C.WordCount,[d.TextFieldCorrectLanguage]:C.Language,[d.URLExists]:C.URL,[d.TCRegex]:C.Regex,[d.TCBadWords]:C.BadWords,[d.TextFieldOverlap]:C.Overlap,[d.TextFieldPromptSpam]:C.InstructionsSimilarity,[d.TextFieldSaplingGrammarLinter]:C.Grammar,[d.MissingResponse]:C.MissingResponse,[d.MinMaxSize]:C.Size,[d.TimesUsed]:C.TimesUsed,[d.ContiguousFrameTrack]:C.ContiguousFrameTrack,[d.PolygonStraightLine]:C.StraightLine,[d.OverlappingVertices]:C.OverlappingVertices,[d.Overlapping]:C.AnnotationOverlap,[d.SemsegLabelMinMax]:C.PixelPercentage};var L,I,h,_,y,v,k,x,b,A;t.DEFAULT_VALIDATOR=P,t.HypothesisChangedLintMode=L,function(e){e.AnyChange="any-change",e.NoChange="no-change"}(L||(t.HypothesisChangedLintMode=L={})),t.NerRelationshipsOverlapType=I,function(e){e.Full="full",e.None="none"}(I||(t.NerRelationshipsOverlapType=I={})),t.MetadataUnitConversionType=h,function(e){e.Same="same",e.Different="different"}(h||(t.MetadataUnitConversionType=h={})),t.ContainmentDependentOn=_,function(e){e.OUTER="outer",e.INNER="inner"}(_||(t.ContainmentDependentOn=_={})),t.LogicalOperator=y,function(e){e.AND="AND",e.OR="OR"}(y||(t.LogicalOperator=y={})),t.ComparisonOperator=v,function(e){e.EQ="===",e.NEQ="!==",e.GT=">",e.GTE=">=",e.LT="<",e.LTE="<="}(v||(t.ComparisonOperator=v={})),t.ValidJsonLintModes=k,function(e){e.JSON="JSON",e.Array="array",e.DoubleArray="doubleArray"}(k||(t.ValidJsonLintModes=k={})),t.RegexMatches=x,function(e){e.Every="every",e.Some="some",e.None="none"}(x||(t.RegexMatches=x={})),t.ZIndexLinterOperator=b,function(e){e.LT="lt",e.LTE="lte",e.GT="gt",e.GTE="gte"}(b||(t.ZIndexLinterOperator=b={})),t.KeypointsDistanceOrientation=A,function(e){e.Horizontal="horizontal",e.Vertical="vertical",e.TotalDistance="totalDistance"}(A||(t.KeypointsDistanceOrientation=A={}));const f=[d.EmptyTask,d.TimeSpent];t.enterpriseDefaultScriptLinterNames=f;const N=Object.values(a.TaskType).filter((e=>e!==a.TaskType.SensorFusion));t.timeSpentLinterAllowedTaskTypes=N;const D=[a.TaskType.Annotation,a.TaskType.PolygonAnnotation,a.TaskType.CuboidAnnotation,a.TaskType.LineAnnotation,a.TaskType.ImageAnnotation,a.TaskType.LineAnnotation,a.TaskType.CuboidAnnotation,a.TaskType.PointAnnotation,a.TaskType.VideoAnnotation,a.TaskType.VideoBoxAnnotation,a.TaskType.VideoCuboidAnnotation,a.TaskType.VideoPolygonAnnotation,a.TaskType.VideoPlaybackAnnotation,a.TaskType.LidarAnnotation,a.TaskType.TextCollection,a.TaskType.GenericDataCollection,a.TaskType.SegmentAnnotation,a.TaskType.Categorization,a.TaskType.SensorFusion];var O,M,F,V;t.emptyTaskLinterAllowedTaskTypes=D,t.TextInAttachmentMode=O,function(e){e.FullText="fulltext",e.Word="word"}(O||(t.TextInAttachmentMode=O={})),t.TextInAttachmentCustom=M,function(e){e.WoodpeckerEnrichment="woodpecker-enrichment"}(M||(t.TextInAttachmentCustom=M={})),t.AcceptedSphereLanguage=F,function(e){e.Python="python",e.Cplusplus="c++",e.Javascript="javascript",e.Java="java",e.SQL="sql",e.None=""}(F||(t.AcceptedSphereLanguage=F={})),t.LidarCuboidShiftMode=V,function(e){e.Legacy="legacy",e.DistanceToEgo="distance-to-ego",e.TravelledDistance="travelled-distance",e.LegacyWithMetrics="legacy-with-metrics",e.DistanceToEgoV2="distance-to-ego-v2"}(V||(t.LidarCuboidShiftMode=V={}));t.isLidarCuboidShiftMetadata=e=>"mode"in e?.extra&&Object.values(V).includes(e.extra.mode)}}]);